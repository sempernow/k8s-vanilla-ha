---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ngx
  namespace: default
  labels:
    app: ngx
  annotations: {}
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ngx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: ngx
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: ngx
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: ngx
        configMap:
          name: ngx
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ngx
  namespace: default
data:
  default.conf: |
    ## /etc/nginx/conf.d/default.conf
    server {
        ## Accept PROXY Protocol 
        ### https://docs.nginx.com/nginx/admin-guide/load-balancer/using-proxy-protocol/
        ### listen PORT proxy_protocol;
        ### That configuration makes the following vars available:
        ### $proxy_protocol_addr : $proxy_protocol_port (Client's IP:PORT)
        ### $remote_addr : $remote_port (Downstream LB's IP:PORT)
        listen       80 proxy_protocol;
        listen  [::]:80 proxy_protocol;
        server_name  localhost;

        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        ## JSON-body response
        location /meta {
            add_header Content-Type application/json;
            return 200 '{"host": "$hostname", "client_ip": "$proxy_protocol_addr", "date": "$time_iso8601"}';
        }

        ## Redirect error pages to static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: ngx
  namespace: default
  labels:
    app: ngx
spec:
  type: NodePort
  selector:
    app: ngx
  externalTrafficPolicy: Local
  internalTrafficPolicy: Cluster
  ports:
  - nodePort: 30080
    port: 80
    protocol: TCP
    targetPort: 80
