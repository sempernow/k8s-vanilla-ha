#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://www.haproxy.org/download/2.9/doc/configuration.txt
#
#---------------------------------------------------------------------

global
        log         /dev/log local0

        chroot      /var/lib/haproxy
        pidfile     /var/run/haproxy.pid
        maxconn     4000
        user        haproxy
        group       haproxy
        daemon

        stats socket /var/lib/haproxy/stats


# Layer 4 (TCP) mode
defaults
    mode                    tcp
    log                     global
    option                  httplog
    option                  dontlognull
    option                  redispatch
    retries                 3
    timeout queue           50000
    timeout connect         5000
    timeout client          50000
    timeout server          50000
    timeout http-request    10000
    timeout http-keep-alive 10000
    timeout check           10000
    maxconn                 3000

# Frontend for K8s API Server
frontend k8s-apiserver
    bind *:8443
    option tcplog
    default_backend k8s-apiserver

# Backend for K8s API Server
backend k8s-apiserver
    option httpchk GET /healthz
    http-check expect status 200
    option ssl-hello-chk
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
    server a0.local 192.168.0.101:6443 check
    server a1.local 192.168.0.102:6443 check

# Frontend for K8s Ingress by HTTP
frontend k8s-ingress-http
    bind *:80
    option tcplog
    default_backend k8s-ingress-http
    
# Backend for K8s Ingress by HTTP
backend k8s-ingress-http
    option httpchk GET /
    http-check expect status 200
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
    server a0.local 192.168.0.101:8080 check
    #server a1.local 192.168.0.102:8080 check

# # Frontend for K8s Ingress HTTPS
# frontend k8s-ingress-https
#     bind *:443
#     option tcplog
#     default_backend k8s-ingress-https
    
# # Backend for K8s Ingress HTTPS
# backend k8s-ingress-https
#     option ssl-hello-chk
#     balance roundrobin
#     default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
#     server a0.local 192.168.0.101:443 check
#     server a1.local 192.168.0.102:443 check

